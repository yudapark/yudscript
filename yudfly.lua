-- Movement Enhancements Script
-- Generated by Secure Explorer
-- Complete movement suite with multiple features

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Feature Flags
local NOCLIP_ENABLED = false
local FLY_ENABLED = false
local SPEED_HACK_ENABLED = false
local INFINITE_JUMP_ENABLED = false
local JUMP_HEIGHT_ENABLED = false
local SPINBOT_ENABLED = false

-- Settings
local FLY_SPEED = 50
local SPEED_MULTIPLIER = 3
local JUMP_HEIGHT = 100
local SPINBOT_SPEED = 10

-- Variables
local flyBodyVelocity = nil
local flyBodyAngularVelocity = nil
local originalWalkSpeed = 16
local originalJumpHeight = 7.2
local connections = {}
local flyKeys = {
    W = false, A = false, S = false, D = false,
    E = false, Q = false, Space = false, LeftShift = false
}

-- Noclip Functions
local function enableNoclip()
    if not LocalPlayer.Character then return end
    
    for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            part.CanCollide = false
        end
    end
end

local function disableNoclip()
    if not LocalPlayer.Character then return end
    
    for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            part.CanCollide = true
        end
    end
end

-- Fly Functions
local function enableFly()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then return end
    
    local rootPart = LocalPlayer.Character.HumanoidRootPart
    
    -- Create BodyVelocity for movement
    flyBodyVelocity = Instance.new("BodyVelocity")
    flyBodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
    flyBodyVelocity.Parent = rootPart
    
    -- Create BodyAngularVelocity for rotation
    flyBodyAngularVelocity = Instance.new("BodyAngularVelocity")
    flyBodyAngularVelocity.MaxTorque = Vector3.new(0, math.huge, 0)
    flyBodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
    flyBodyAngularVelocity.Parent = rootPart
end

local function disableFly()
    if flyBodyVelocity then
        flyBodyVelocity:Destroy()
        flyBodyVelocity = nil
    end
    
    if flyBodyAngularVelocity then
        flyBodyAngularVelocity:Destroy()
        flyBodyAngularVelocity = nil
    end
end

local function updateFlyMovement()
    if not FLY_ENABLED or not flyBodyVelocity or not LocalPlayer.Character then return end
    
    local rootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    
    local camera = Camera
    local moveVector = Vector3.new(0, 0, 0)
    
    -- Calculate movement direction based on camera
    local lookVector = camera.CFrame.LookVector
    local rightVector = camera.CFrame.RightVector
    local upVector = Vector3.new(0, 1, 0)
    
    -- Forward/Backward
    if flyKeys.W then moveVector = moveVector + lookVector end
    if flyKeys.S then moveVector = moveVector - lookVector end
    
    -- Left/Right
    if flyKeys.A then moveVector = moveVector - rightVector end
    if flyKeys.D then moveVector = moveVector + rightVector end
    
    -- Up/Down
    if flyKeys.E or flyKeys.Space then moveVector = moveVector + upVector end
    if flyKeys.Q or flyKeys.LeftShift then moveVector = moveVector - upVector end
    
    -- Normalize and apply speed
    if moveVector.Magnitude > 0 then
        moveVector = moveVector.Unit * FLY_SPEED
    end
    
    flyBodyVelocity.Velocity = moveVector
end

-- Speed Hack Functions
local function enableSpeedHack()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then return end
    
    local humanoid = LocalPlayer.Character.Humanoid
    originalWalkSpeed = humanoid.WalkSpeed
    humanoid.WalkSpeed = originalWalkSpeed * SPEED_MULTIPLIER
end

local function disableSpeedHack()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then return end
    
    local humanoid = LocalPlayer.Character.Humanoid
    humanoid.WalkSpeed = originalWalkSpeed
end

-- Jump Height Functions
local function enableJumpHeight()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then return end
    
    local humanoid = LocalPlayer.Character.Humanoid
    originalJumpHeight = humanoid.JumpHeight
    humanoid.JumpHeight = JUMP_HEIGHT
end

local function disableJumpHeight()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then return end
    
    local humanoid = LocalPlayer.Character.Humanoid
    humanoid.JumpHeight = originalJumpHeight
end

-- Infinite Jump Function
local function handleInfiniteJump()
    if not INFINITE_JUMP_ENABLED or not LocalPlayer.Character then return end
    
    local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
    if humanoid then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end

-- Spinbot Function
local function updateSpinbot()
    if not SPINBOT_ENABLED or not LocalPlayer.Character then return end
    
    local rootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if rootPart then
        rootPart.CFrame = rootPart.CFrame * CFrame.Angles(0, math.rad(SPINBOT_SPEED), 0)
    end
end

-- Teleport Functions
local function teleportForward(distance)
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then return end
    
    local rootPart = LocalPlayer.Character.HumanoidRootPart
    local lookVector = Camera.CFrame.LookVector
    rootPart.CFrame = rootPart.CFrame + (lookVector * (distance or 10))
end

local function teleportBackward(distance)
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then return end
    
    local rootPart = LocalPlayer.Character.HumanoidRootPart
    local lookVector = Camera.CFrame.LookVector
    rootPart.CFrame = rootPart.CFrame - (lookVector * (distance or 10))
end

-- Input Handling
connections.inputBegan = UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    -- Fly movement keys
    if input.KeyCode == Enum.KeyCode.W then flyKeys.W = true
    elseif input.KeyCode == Enum.KeyCode.A then flyKeys.A = true
    elseif input.KeyCode == Enum.KeyCode.S then flyKeys.S = true
    elseif input.KeyCode == Enum.KeyCode.D then flyKeys.D = true
    elseif input.KeyCode == Enum.KeyCode.E then flyKeys.E = true
    elseif input.KeyCode == Enum.KeyCode.Q then flyKeys.Q = true
    elseif input.KeyCode == Enum.KeyCode.Space then 
        flyKeys.Space = true
        if INFINITE_JUMP_ENABLED then handleInfiniteJump() end
    elseif input.KeyCode == Enum.KeyCode.LeftShift then flyKeys.LeftShift = true
    
    -- Toggle keys
    elseif input.KeyCode == Enum.KeyCode.B then
        NOCLIP_ENABLED = not NOCLIP_ENABLED
        print("Noclip: " .. (NOCLIP_ENABLED and "ON" or "OFF"))
        
    elseif input.KeyCode == Enum.KeyCode.F then
        FLY_ENABLED = not FLY_ENABLED
        print("Fly: " .. (FLY_ENABLED and "ON" or "OFF"))
        if FLY_ENABLED then
            enableFly()
        else
            disableFly()
        end
        
    elseif input.KeyCode == Enum.KeyCode.G then
        SPEED_HACK_ENABLED = not SPEED_HACK_ENABLED
        print("Speed Hack: " .. (SPEED_HACK_ENABLED and "ON" or "OFF"))
        if SPEED_HACK_ENABLED then
            enableSpeedHack()
        else
            disableSpeedHack()
        end
        
    elseif input.KeyCode == Enum.KeyCode.H then
        INFINITE_JUMP_ENABLED = not INFINITE_JUMP_ENABLED
        print("Infinite Jump: " .. (INFINITE_JUMP_ENABLED and "ON" or "OFF"))
        
    elseif input.KeyCode == Enum.KeyCode.J then
        JUMP_HEIGHT_ENABLED = not JUMP_HEIGHT_ENABLED
        print("Jump Height: " .. (JUMP_HEIGHT_ENABLED and "ON" or "OFF"))
        if JUMP_HEIGHT_ENABLED then
            enableJumpHeight()
        else
            disableJumpHeight()
        end
        
    elseif input.KeyCode == Enum.KeyCode.K then
        SPINBOT_ENABLED = not SPINBOT_ENABLED
        print("Spinbot: " .. (SPINBOT_ENABLED and "ON" or "OFF"))
        
    -- Teleport keys
    elseif input.KeyCode == Enum.KeyCode.Up then
        teleportForward(15)
        
    elseif input.KeyCode == Enum.KeyCode.Down then
        teleportBackward(15)
    end
end)

connections.inputEnded = UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    -- Fly movement keys
    if input.KeyCode == Enum.KeyCode.W then flyKeys.W = false
    elseif input.KeyCode == Enum.KeyCode.A then flyKeys.A = false
    elseif input.KeyCode == Enum.KeyCode.S then flyKeys.S = false
    elseif input.KeyCode == Enum.KeyCode.D then flyKeys.D = false
    elseif input.KeyCode == Enum.KeyCode.E then flyKeys.E = false
    elseif input.KeyCode == Enum.KeyCode.Q then flyKeys.Q = false
    elseif input.KeyCode == Enum.KeyCode.Space then flyKeys.Space = false
    elseif input.KeyCode == Enum.KeyCode.LeftShift then flyKeys.LeftShift = false
    end
end)

-- Main Loop
connections.mainLoop = RunService.Heartbeat:Connect(function()
    -- Update noclip
    if NOCLIP_ENABLED then
        enableNoclip()
    end
    
    -- Update fly movement
    if FLY_ENABLED then
        updateFlyMovement()
    end
    
    -- Update speed hack
    if SPEED_HACK_ENABLED then
        enableSpeedHack()
    end
    
    -- Update jump height
    if JUMP_HEIGHT_ENABLED then
        enableJumpHeight()
    end
    
    -- Update spinbot
    updateSpinbot()
end)

-- Character respawn handling
connections.characterAdded = LocalPlayer.CharacterAdded:Connect(function()
    wait(1) -- Wait for character to load
    
    -- Reapply settings
    if SPEED_HACK_ENABLED then enableSpeedHack() end
    if JUMP_HEIGHT_ENABLED then enableJumpHeight() end
    if FLY_ENABLED then enableFly() end
end)

-- Cleanup function
local function cleanup()
    for _, connection in pairs(connections) do
        if connection then connection:Disconnect() end
    end
    
    disableFly()
    disableSpeedHack()
    disableJumpHeight()
    disableNoclip()
end

-- Cleanup on player leaving
Players.PlayerRemoving:Connect(function(player)
    if player == LocalPlayer then
        cleanup()
    end
end)

print("✅ Movement Enhancements loaded!")
print("🎮 Controls:")
print("  B - Toggle Noclip")
print("  F - Toggle Fly (WASD + E/Q or Space/Shift)")
print("  G - Toggle Speed Hack")
print("  H - Toggle Infinite Jump")
print("  J - Toggle Jump Height")
print("  K - Toggle Spinbot")
print("  ↑ - Teleport Forward")
print("  ↓ - Teleport Backward")
print("⚙️ Settings:")
print("  Fly Speed: " .. FLY_SPEED)
print("  Speed Multiplier: " .. SPEED_MULTIPLIER .. "x")
print("  Jump Height: " .. JUMP_HEIGHT)
